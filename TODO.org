* means of registering handlers
* wrap encoder fns in json and msgpack-specific types ?
* Deal with reading unrecognized extensions; these are *not* errors.
- For a string, reader should return (str "`" encoded-str)
- For a map, reader should return an instance of a TaggedValue type w/
map's tag and value
- Writer should remove ` from strs that start w/ `~
- Writer should encode TaggedValue as having tag and value it carries
inside it
- This allows a reader to receive non-decoded data and write it back out
w/o losing any information
- This is the default behavior for readers/writers - but there must be a
way for a client to configure a reader to do something else, e.g.,
throw an exception
* Composite map keys
- If I have a hash in Ruby with some composite key, does that just
  automatically get written out at a cmap?
  - Yes
- Do I as the writer need to do anything special, like perhaps
  wrapping my map in a special CMap object?
  - No
- Similarly on the way in, should Cmaps just translate into ordinary
  maps with interesting keys?
  - Yes
